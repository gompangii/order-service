plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
	//set('testcontainersVersion', "1.19.8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
	implementation 'org.springframework.cloud:spring-cloud-stream'

	runtimeOnly 'org.mariadb:r2dbc-mariadb'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	//runtimeOnly 'org.flywaydb:flyway-core'
	//runtimeOnly 'org.springframework:spring-jdbc'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation 'org.testcontainers:r2dbc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootBuildImage {
	//builder = "docker.io/paketobuildpacks/builder-jammy-base"
	imageName = "${project.name}"
	publish = true
	environment = ["BP_JVM_VERSION": "17"]

	docker {
		publishRegistry {
			username = project.findProperty("registryUsername")
			password = project.findProperty("registryToken")
			url = project.findProperty("registryUrl")
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
